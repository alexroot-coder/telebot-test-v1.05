# -*- coding: utf-8 -*-
import telebot
import parse
import datetime
import time
import weather as w
import news as n
import config as con
import random
from telebot import types

for_rand_0=0
for_rand_1000000=1000000

bot = telebot.TeleBot(con.TOKEN) #TOKEN

#msg = str(parse.title)
user = bot.get_me()
#start
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start \n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ /help')
#help 
@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id,'–í–æ—Ç –Ω–µ–±–æ–ª—å—à–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥,–∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å:\n/date - –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è\n/news - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\n/geo - –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è\n–ü–æ–≥–æ–¥–∞ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–ª–æ–≤–æ "–ü–æ–≥–æ–¥–∞"' + '\n'+ '/rand - –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1000000')
#date 
@bot.message_handler(commands=['date'])
def date_message(message):
    bot.send_message(message.chat.id,'–î–∞—Ç–∞: '+str(date()))
    clear(date)
#news 
@bot.message_handler(commands=['news'])
def news_message(message):
    bot.send_message(message.chat.id,str(last_news()))
    last_news_clear(last_news)
#geo
@bot.message_handler(commands=["geo"])
def geo_message(message):
    keyboard = types.ReplyKeyboardMarkup(True,True) #row_width=1, resize_keyboard=True
    button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
    keyboard.add(button_geo)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–¥–∞–π –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=keyboard)

@bot.message_handler(content_types=["location"])
def location(message):
	bot.send_location(message.chat.id, latitude, longitude)
#different text
@bot.message_handler(content_types=['text'])	
def sent_text(message):
	if message.text.lower() == '–ø–æ–≥–æ–¥–∞':
		bot.send_message(message.chat.id, str(weather1()))
		clear_weather(weather1)
	elif message.text.lower() == '–ø–æ–∫–∞':
		bot.send_message(message.chat.id,'–ü—Ä–æ—â–∞–πüòï')
	elif message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
		bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—ÇüòÅ')
	elif message.text == '/rand':
		bot.send_message(message.chat.id,randd(a=for_rand_0,b=for_rand_1000000))
	elif message.text == 'spam':
		bot.send_message(message.chat.id,'–†–∞—Å—Å—ã–ª–∫–∞ –≤–∫–ª')
		global spam
		spam = True
		while spam:
			bot.send_message(message.chat.id,last_news())
			last_news_clear(last_news)
			time.sleep(28000)
	elif message.text == 'stop':
		spam = False
		bot.send_message(message.chat.id,'–†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–∫–ª')
	else:
		bot.send_message(message.chat.id, '–Ø –µ—â–µ –Ω–µ –≤—Å—ë –ø–æ–Ω–∏–º–∞—éü§®')
	#print(message.from_user.username,message.text)
#sticker	
@bot.message_handler(content_types=['sticker'])
def sent_stick(message):
	bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAOPXjW-xLLIM-SU0pV7tWs3wMM5l24AAh4AA5z-MjDaa3SCaHx-bBgE')

def randd(a,b):
	val = random.randint(a,b)
	return val

def date():
	date = str(datetime.date.today()) + '\n' +str(datetime.datetime.now().time().hour) + ':' + str(datetime.datetime.now().time().minute) + ':' + str(datetime.datetime.now().time().second)
	return date

def clear(date):
	date = None
	return date

def weather1():
	weather1 = (str(w.info) +','+ str(w.info2) +'\n' +str(date())+'\n' + '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + str(w.a1) + '¬∞C' + '\n' + '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + str(w.a2) + '¬∞C' + '\n' + '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + str(w.a3) + '¬∞C' + '\n' + '–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è: ' + str(w.a0)+ '\n' + '–í–µ—Ç–µ—Ä: ' + str(w.a4)+' –º/—Å')
	return weather1

def clear_weather(weather1):
	weather1 = None
	return weather1

def last_news():
	last_news = ('–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏: '+ str(n.b0)+ '\n' + str(n.b1)+ '\n' + str(n.b2))
	return last_news

def last_news_clear(last_news):
	last_news = None
	return last_news

#bot.polling(none_stop=True)
if __name__ == '__main__':
     bot.infinity_polling()


